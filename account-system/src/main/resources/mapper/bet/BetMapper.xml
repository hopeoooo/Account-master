<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.account.system.mapper.BetMapper">

    <insert id="saveBet" useGeneratedKeys="true" keyProperty="betId" keyColumn="bet_id" parameterType="sysBet">
        insert into sys_bet (card, table_id, version, boot_num, game_num, type, game_id, game_result, create_by, create_time)
        values (#{card}, #{tableId}, #{version}, #{bootNum}, #{gameNum}, #{type}, #{gameId}, #{gameResult}, #{createBy}, sysdate())
    </insert>

    <insert id="saveBetInfos">
        insert into sys_bet_info(bet_id,card,table_id,version,boot_num,game_num,
        type,game_id,bet_option,bet_money,game_result,win_lose,create_time,
        water,water_amount,pump,create_by)
        values
        <foreach item="item" index="index" collection="list" separator=",">
            (#{item.betId},#{item.card},#{item.tableId},#{item.version},#{item.bootNum},#{item.gameNum}
            ,#{item.type},#{item.gameId},#{item.betOption},#{item.betMoney},#{item.gameResult},#{item.winLose},sysdate(),
            <choose>
             <when test="item.water != null">
                 #{item.water},
             </when>
             <otherwise>
                 0,
             </otherwise>
            </choose>
            <choose>
                <when test="item.waterAmount != null">
                    #{item.waterAmount},
                </when>
                <otherwise>
                    0,
                </otherwise>
            </choose>
            <choose>
                <when test="item.pump != null">
                    #{item.pump},
                </when>
                <otherwise>
                    0,
                </otherwise>
            </choose>
             #{item.createBy})
        </foreach>
    </insert>



    <select id="selectBetInfoList"  resultType="com.account.system.domain.vo.BetInfoVo">
        SELECT
            bt.bet_id as betId,
            bt.card,
            bt.version,
            bt.table_id AS tableId,
            bt.boot_num AS bootNum,
            bt.game_num AS gameNum,
            bt.type,
            SUM(b.bet_money) as betMoney,
            bt.game_result AS gameResult,
            SUM(b.win_lose) as winLose,
            bt.create_time AS createTime,
            bt.create_by AS createBy
        FROM
            sys_bet bt
                LEFT JOIN sys_bet_info b on b.bet_id=bt.bet_id

        <where>
            <if test="card != null and card != ''">
                AND bt.card = #{card}
            </if>

            <if test="tableId != null and tableId != ''">
                AND bt.table_id = #{tableId}
            </if>

            <if test="gameId != null and gameId != ''">
                AND bt.game_id = #{gameId}
            </if>

            <if test="type != null and type != ''">
                AND bt.type = #{type}
            </if>

            <if test="bootNum != null and bootNum != ''">
                AND bt.boot_num = #{bootNum}
            </if>
            <if test="gameNum != null and gameNum != ''">
                AND bt.game_num = #{gameNum}
            </if>
            <if test="createBy != null and createBy != ''">
                AND bt.create_by = #{createBy}
            </if>
            <if test="startTime != null and startTime != ''">
                AND bt.create_time <![CDATA[>=]]> #{startTime}
            </if>
            <if test="endTime != null and endTime != ''">
                AND bt.create_time <![CDATA[<=]]> #{endTime}
            </if>
        </where>
        GROUP BY bt.bet_id
    </select>

    <select id="selectBetOptionList" resultType="com.account.system.domain.vo.BetInfoOptionVo">
        SELECT
            b.bet_id as betId,
            b.bet_option as betOption,
            b.bet_money as betMoney
        FROM
            sys_bet_info b
        <where>
            b.bet_id in
            <foreach collection="betIds" index="index" item="betId"
                     open="(" separator="," close=")">
                #{betId}
            </foreach>
        </where>
    </select>

    <select id="selectBetTotal"  resultType="java.util.Map">
        SELECT
            SUM( b.bet_money ) AS betMoney,
            SUM( b.win_lose ) AS winLose
        FROM
        sys_bet bt
        LEFT JOIN sys_bet_info b on b.bet_id=bt.bet_id
        <where>
            <if test="card != null and card != ''">
                AND bt.card = #{card}
            </if>

            <if test="tableId != null and tableId != ''">
                AND bt.table_id = #{tableId}
            </if>

            <if test="gameId != null and gameId != ''">
                AND bt.game_id = #{gameId}
            </if>

            <if test="type != null and type != ''">
                AND bt.type = #{type}
            </if>

            <if test="bootNum != null and bootNum != ''">
                AND bt.boot_num = #{bootNum}
            </if>
            <if test="gameNum != null and gameNum != ''">
                AND bt.game_num = #{gameNum}
            </if>
            <if test="createBy != null and createBy != ''">
                AND bt.create_by = #{createBy}
            </if>
            <if test="startTime != null and startTime != ''">
                AND bt.create_time <![CDATA[>=]]> #{startTime}
            </if>
            <if test="endTime != null and endTime != ''">
                AND bt.create_time <![CDATA[<=]]> #{endTime}
            </if>
        </where>
    </select>

    <insert id="savePorint">
        insert into sys_porint ( table_id, version, boot_num, sys_chip, person_chip, chip_gap, chip_add, sys_insurance, person_insurance,
                                 insurance_gap,insurance_add,water,chip_win,insurance_win,create_by,create_time)
        values (#{tableId}, #{version}, #{bootNum}, #{sysChip}, #{personChip}, #{chipGap}, #{chipAdd}, #{sysInsurance},#{personInsurance},
                #{insuranceGap}, #{insuranceAdd}, #{water}, #{chipWin}, #{insuranceWin},#{createBy},sysdate())
    </insert>

    <update id="updateBetInfos">
        <foreach item="item" index="index" collection="list" separator=";">
            update sys_bet_info
            <set>
                <if test="item.gameResult!=''">game_result = #{item.gameResult},</if>
                <if test="item.type!=''">type = #{item.type},</if>
                <choose>
                    <when test="item.winLose != null">
                        win_lose = #{item.winLose},
                    </when>
                    <otherwise>
                        win_lose = 0,
                    </otherwise>
                </choose>
                <choose>
                    <when test="item.water != null">
                        water = #{item.water},
                    </when>
                    <otherwise>
                        water = 0,
                    </otherwise>
                </choose>
                <choose>
                    <when test="item.waterAmount != null">
                        water_amount = #{item.waterAmount},
                    </when>
                    <otherwise>
                        water_amount = 0,
                    </otherwise>
                </choose>
                <choose>
                    <when test="item.tie != null">
                        tie = #{item.tie},
                    </when>
                    <otherwise>
                        tie = 0,
                    </otherwise>
                </choose>
                <choose>
                    <when test="item.pump != null">
                        pump = #{item.pump},
                    </when>
                    <otherwise>
                        pump = 0,
                    </otherwise>
                </choose>
                update_time = #{item.updateTime},
                update_by = #{item.updateBy}
            </set>
            where bet_id = #{item.betId} and `bet_option` = #{item.betOption}
        </foreach>
    </update>

    <insert id="saveReceipt">
        insert into sys_receipt ( table_id, version, chip, cash, insurance, chip_add, cash_add, insurance_add, water,
                                  win,insurance_win,create_by,create_time)
        values (#{tableId}, #{version}, #{chip}, #{cash}, #{insurance}, #{chipAdd}, 0, #{insuranceAdd},#{water},
                #{win}, #{insuranceWin},#{createBy},sysdate())
    </insert>

    <select id="selectDailyReportList" resultType="java.util.Map">
        SELECT
        m.card as card,
        m.`name` as name ,
        date_format(b.create_time,'%Y-%m-%d') as date ,
        SUM( b.win_lose ) as winLose,
        (select SUM(a.win_lose) from sys_bet_info a WHERE date_format(a.create_time,'%Y-%m-%d') <![CDATA[<=]]>	date_format(b.create_time,'%Y-%m-%d') and a.card=b.card) as sumWinLose,
        SUM( b.water ) as water,
        (select SUM(a.water) from sys_bet_info a WHERE date_format(a.create_time,'%Y-%m-%d') <![CDATA[<=]]>	date_format(b.create_time,'%Y-%m-%d') and a.card=b.card) as sumWater
        FROM
        sys_bet_info b
        LEFT JOIN sys_members m ON m.card = b.card
        <where>
            <if test="card != null and card != ''">
                AND b.card = #{card}
            </if>
            <if test="startTime != null and startTime != ''">
                AND date_format(b.create_time,'%Y-%m-%d') <![CDATA[>=]]> #{startTime}
            </if>
            <if test="endTime != null and endTime != ''">
                AND date_format(b.create_time,'%Y-%m-%d') <![CDATA[<=]]> #{endTime}
            </if>
        </where>
        GROUP BY m.card,date_format(b.create_time,'%Y-%m-%d')
        ORDER BY date_format(b.create_time,'%Y-%m-%d') desc
    </select>

    <select id="selectDailyReportTotal"  resultType="java.util.Map">
        SELECT
            SUM( b.win_lose ) AS winLose,
            SUM( b.water ) AS water
        FROM
            sys_bet_info b
        <where>
            <if test="card != null and card != ''">
                AND b.card = #{card}
            </if>
            <if test="startTime != null and startTime != ''">
                AND date_format(b.create_time,'%Y-%m-%d') <![CDATA[>=]]> #{startTime}
            </if>
            <if test="endTime != null and endTime != ''">
                AND date_format(b.create_time,'%Y-%m-%d') <![CDATA[<=]]> #{endTime}
            </if>
        </where>
    </select>

</mapper>
